/*++

Copyright (C) 2018 Automatic Component Toolkit Developers

All rights reserved.

This file has been generated by the Automatic Component Toolkit (ACT) version 1.2.4.

Abstract: This is an autogenerated plain C Header file with basic types in
order to allow an easy use of Prime Numbers Interface

Interface version: 1.2.0

*/

#ifndef __LIBPRIMES_TYPES_HEADER
#define __LIBPRIMES_TYPES_HEADER

/*************************************************************************************************************************
 General type definitions
**************************************************************************************************************************/

typedef int LibPrimesResult;
typedef void * LibPrimesHandle;

/*************************************************************************************************************************
 Version for LibPrimes
**************************************************************************************************************************/

#define LIBPRIMES_VERSION_MAJOR 1
#define LIBPRIMES_VERSION_MINOR 2
#define LIBPRIMES_VERSION_MICRO 0

/*************************************************************************************************************************
 Error constants for LibPrimes
**************************************************************************************************************************/

#define LIBPRIMES_SUCCESS 0
#define LIBPRIMES_ERROR_NOTIMPLEMENTED 1
#define LIBPRIMES_ERROR_INVALIDPARAM 2
#define LIBPRIMES_ERROR_INVALIDCAST 3
#define LIBPRIMES_ERROR_BUFFERTOOSMALL 4
#define LIBPRIMES_ERROR_GENERICEXCEPTION 5
#define LIBPRIMES_ERROR_COULDNOTLOADLIBRARY 6
#define LIBPRIMES_ERROR_COULDNOTFINDLIBRARYEXPORT 7
#define LIBPRIMES_ERROR_NORESULTAVAILABLE 8
#define LIBPRIMES_ERROR_CALCULATIONABORTED 9

/*************************************************************************************************************************
 Declaration of handle classes 
**************************************************************************************************************************/

typedef LibPrimesHandle LibPrimes_BaseClass;
typedef LibPrimesHandle LibPrimes_Calculator;
typedef LibPrimesHandle LibPrimes_FactorizationCalculator;
typedef LibPrimesHandle LibPrimes_SieveCalculator;

/*************************************************************************************************************************
 Declaration of structs
**************************************************************************************************************************/

#pragma pack (1)

typedef struct {
    unsigned long long m_Prime;
    unsigned int m_Multiplicity;
} sLibPrimesPrimeFactor;

#pragma pack ()

/*************************************************************************************************************************
 Declaration of function pointers 
**************************************************************************************************************************/

/**
* LibPrimesProgressCallback - Callback to report calculation progress and query whether it should be aborted
*
* @param[in] fProgressPercentage - How far has the calculation progressed?
* @param[out] pShouldAbort - Should the calculation be aborted?
*/
typedef void(*LibPrimesProgressCallback)(float, bool*);

#endif // __LIBPRIMES_TYPES_HEADER
