/*++

Copyright (C) 2019 PrimeDevelopers

All rights reserved.

This file has been generated by the Automatic Component Toolkit (ACT) version 1.7.0-develop.

Abstract: This is an autogenerated Java file in order to allow an easy
 use of Prime Numbers Library

Interface version: 1.2.0

*/

package libprimes;

import com.sun.jna.Library;
import com.sun.jna.Memory;
import com.sun.jna.Native;
import com.sun.jna.Pointer;
import java.lang.ref.Cleaner;


import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.List;

public class SieveCalculator extends Calculator {

	public SieveCalculator(LibPrimesWrapper wrapper, Pointer handle) {
		super(wrapper, handle);
	}

	/**
	 * Returns all prime numbers lower or equal to the sieve's value
	 *
	 * @return The primes lower or equal to the sieve's value
	 * @throws LibPrimesException
	 */
	public long[] getPrimes() throws LibPrimesException {
		Pointer countNeededPrimes = new Memory(4);
		mWrapper.checkError(this, mWrapper.libprimes_sievecalculator_getprimes.invokeInt(new Object[]{mHandle, 0, countNeededPrimes, Pointer.NULL}));
		int countPrimes = countNeededPrimes.getInt(0);
		Pointer bufferPrimes = new Memory(Math.max(1, 8 * countPrimes));
		mWrapper.checkError(this, mWrapper.libprimes_sievecalculator_getprimes.invokeInt(new Object[]{mHandle, countPrimes, countNeededPrimes, bufferPrimes}));
		return bufferPrimes.getLongArray(0, countPrimes);
	}


}

