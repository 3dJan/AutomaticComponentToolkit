/*++

Copyright (C) 2021 ADSK

All rights reserved.

This file has been generated by the Automatic Component Toolkit (ACT) version 1.7.0-develop.

Abstract: This is an autogenerated Java file in order to allow an easy
 use of RTTI

Interface version: 1.0.0

*/

package rtti;

import com.sun.jna.Library;
import com.sun.jna.Memory;
import com.sun.jna.Native;
import com.sun.jna.Pointer;
import java.lang.ref.Cleaner;


import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.List;

public class AnimalIterator extends Base {

	public AnimalIterator(RTTIWrapper wrapper, Pointer handle) {
		super(wrapper, handle);
	}

	/**
	 * Return next animal
	 *
	 * @return 
	 * @throws RTTIException
	 */
	public Animal getNextAnimal() throws RTTIException {
		Pointer bufferAnimal = new Memory(8);
		mWrapper.checkError(this, mWrapper.rtti_animaliterator_getnextanimal.invokeInt(new java.lang.Object[]{mHandle, bufferAnimal}));
		Pointer valueAnimal = bufferAnimal.getPointer(0);
		Animal animal = null;
		if (valueAnimal != Pointer.NULL) {
		  animal = mWrapper.PolymorphicFactory(valueAnimal, Animal.class);
		}
		return animal;
	}

	/**
	 * Return next animal
	 *
	 * @return GetNextOptinalAnimal Result Tuple
	 * @throws RTTIException
	 */
	public GetNextOptinalAnimalResult getNextOptinalAnimal() throws RTTIException {
		Pointer bufferAnimal = new Memory(8);
		Pointer bufferError = new Memory(1);
		mWrapper.checkError(this, mWrapper.rtti_animaliterator_getnextoptinalanimal.invokeInt(new java.lang.Object[]{mHandle, bufferAnimal, bufferError}));
		Pointer valueAnimal = bufferAnimal.getPointer(0);
		Animal animal = null;
		if (valueAnimal != Pointer.NULL) {
		  animal = mWrapper.PolymorphicFactory(valueAnimal, Animal.class);
		}
		GetNextOptinalAnimalResult returnTuple = new GetNextOptinalAnimalResult();
		returnTuple.Animal = animal;
		returnTuple.Error = bufferError.getByte(0) != 0;
		return returnTuple;
	}

	public static class GetNextOptinalAnimalResult {
		/**
		 * 
		 */
		public Animal Animal;

		/**
		 * 
		 */
		public boolean Error;

	}
	/**
	 * Return next animal
	 *
	 * @return GetNextMandatoryAnimal Result Tuple
	 * @throws RTTIException
	 */
	public GetNextMandatoryAnimalResult getNextMandatoryAnimal() throws RTTIException {
		Pointer bufferAnimal = new Memory(8);
		Pointer bufferError = new Memory(1);
		mWrapper.checkError(this, mWrapper.rtti_animaliterator_getnextmandatoryanimal.invokeInt(new java.lang.Object[]{mHandle, bufferAnimal, bufferError}));
		Pointer valueAnimal = bufferAnimal.getPointer(0);
		Animal animal = null;
		if (valueAnimal != Pointer.NULL) {
		  animal = mWrapper.PolymorphicFactory(valueAnimal, Animal.class);
		}
		GetNextMandatoryAnimalResult returnTuple = new GetNextMandatoryAnimalResult();
		returnTuple.Animal = animal;
		returnTuple.Error = bufferError.getByte(0) != 0;
		return returnTuple;
	}

	public static class GetNextMandatoryAnimalResult {
		/**
		 * 
		 */
		public Animal Animal;

		/**
		 * 
		 */
		public boolean Error;

	}

}

