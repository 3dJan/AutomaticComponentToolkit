/*++

Copyright (C) 2021 ADSK

All rights reserved.

This file has been generated by the Automatic Component Toolkit (ACT) version 1.7.0-develop.

Abstract: This is an autogenerated C++ application that demonstrates the
 usage of the C++ bindings of RTTI

Interface version: 1.0.0

*/

#include <iostream>
#include "rtti_implicit.hpp"


int main()
{
	try
	{
		auto wrapper = RTTI::CWrapper::loadLibrary();
		RTTI_uint32 nMajor, nMinor, nMicro;
		wrapper->GetVersion(nMajor, nMinor, nMicro);
		std::cout << "RTTI.Version = " << nMajor << "." << nMinor << "." << nMicro;
		std::cout << std::endl;

		auto zoo = wrapper->CreateZoo();
		auto iter = zoo->Iterator();

		using namespace RTTI;
		while (auto animal = iter->GetNextAnimal()) {
			std::cout << "Animal name: " << animal->Name() << std::endl;
			if (auto tiger = std::dynamic_pointer_cast<CTiger>(animal)) {
				std::cout << "  ^ is a real tiger!!!" << std::endl;
				tiger->Roar();
			}
		}
	}
	catch (std::exception &e)
	{
		std::cout << e.what() << std::endl;
		return 1;
	}
	return 0;
}

