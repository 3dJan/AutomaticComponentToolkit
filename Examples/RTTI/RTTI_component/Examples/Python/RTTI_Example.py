'''++

Copyright (C) 2020 ADSK

All rights reserved.

This file has been generated by the Automatic Component Toolkit (ACT) version 1.7.0-develop.

Abstract: This is an autogenerated Python application that demonstrates the
 usage of the Python bindings of RTTI

Interface version: 1.0.0

'''


import os
import sys
sys.path.append(os.path.join(os.path.dirname(os.path.realpath(__file__)), "..", "..", "Bindings", "Python"))
import RTTI


def main():
	libpath = '' # TODO add the location of the shared library binary here
	wrapper = RTTI.Wrapper(libraryName = os.path.join(libpath, "rtti"))
	
	major, minor, micro = wrapper.GetVersion()
	print("RTTI version: {:d}.{:d}.{:d}".format(major, minor, micro), end="")
	print("")

	zoo = wrapper.CreateZoo()
	iter = zoo.Iterator()

	while animal := iter.GetNextAnimal():
		if tiger := RTTI.Tiger.cast(animal):
			tiger.Roar()
		print("Animal name: " + animal.Name())

if __name__ == "__main__":
	try:
		main()
	except RTTI.ERTTIException as e:
		print(e)
