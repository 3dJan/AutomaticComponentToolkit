(*++

Copyright (C) 2020 ADSK

All rights reserved.

This file has been generated by the Automatic Component Toolkit (ACT) version 1.7.0-develop.

Abstract: This is an autogenerated Pascal application that demonstrates the
 usage of the Pascal bindings of RTTI

Interface version: 1.0.0

*)

program RTTIPascalTest;
{$mode objfpc}{$H+}
uses
	{$IFDEF UNIX}{$IFDEF UseCThreads}
	cthreads,
	{$ENDIF}{$ENDIF}
	Classes, SysUtils, CustApp,
	Unit_RTTI
	{ you can add units after this };

type

TRTTI_Example = class(TCustomApplication)
protected
	procedure DoRun; override;
	procedure TestRTTI();
public
	constructor Create(TheOwner: TComponent); override;
	destructor Destroy; override;
end;


procedure TRTTI_Example.TestRTTI();
var
	ARTTIWrapper: TRTTIWrapper;
        Zoo: TRTTIZoo;
        Iterator: TRTTIAnimalIterator;
        Animal: TRTTIAnimal;
        Tiger: TRTTITiger;
	AMajor, AMinor, AMicro: Cardinal;
	AVersionString: string;
	ALibPath: string;
begin
	writeln('loading DLL');
	ALibPath := '.'; // TODO add the location of the shared library binary here
	ARTTIWrapper := TRTTIWrapper.Create(ALibPath + '/' + 'rtti.'); // TODO add the extension of the shared library file here

	try
		writeln('loading DLL Done');
		ARTTIWrapper.GetVersion(AMajor, AMinor, AMicro);
		AVersionString := Format('RTTI.version = %d.%d.%d', [AMajor, AMinor, AMicro]);
		writeln(AVersionString);
		Zoo := ARTTIWrapper.CreateZoo();
                Iterator := Zoo.Iterator();
                Animal := Iterator.GetNextAnimal();
                while Animal <> nil do
                begin
                  writeln('Animal name: ', Animal.Name());
                  if Animal is TRTTITiger then 
				  begin
				  	writeln('  ^ is a real tiger!!!');
					Tiger := Animal as TRTTITiger;
					Tiger.Roar();
				  end;
                  Animal := Iterator.GetNextAnimal();
                end;
	finally
		FreeAndNil(ARTTIWrapper);
	end;
end;

procedure TRTTI_Example.DoRun;
begin
	try
		TestRTTI();
	except
		On E: Exception do
			writeln('Fatal error: ', E.Message);
	end;
	Terminate
end;

constructor TRTTI_Example.Create(TheOwner: TComponent);
begin
	inherited Create(TheOwner);
	StopOnException:=True;
end;

destructor TRTTI_Example.Destroy;
begin
	inherited Destroy;
end;


var
	Application: TRTTI_Example;
begin
	Application:=TRTTI_Example.Create(nil);
	Application.Run;
	Application.Free;
end.
