/*++

Copyright (C) 2021 ADSK

All rights reserved.

This file has been generated by the Automatic Component Toolkit (ACT) version 1.7.0-develop.

Abstract: This is an autogenerated Go application that demonstrates the
 usage of the Go bindings of RTTI

Interface version: 1.0.0

*/


package main

import (
	"fmt"
	"log"
	"../../Bindings/Go"
)

func main() {
	fmt.Println("Start")
	wrapper, err := rtti.LoadLibrary("rtti.dylib")
	if err != nil {
		fmt.Println(err)
	}
	nMajor, nMinor, nMicro, err := wrapper.GetVersion()
	if err != nil {
		log.Fatal(err)
	}
	versionString := fmt.Sprintf("rtti.version = %d.%d.%d", nMajor, nMinor, nMicro)
	
	fmt.Println(versionString)
	Zoo, err := wrapper.CreateZoo()
	Iterator, err := Zoo.Iterator()
	for true {
		Animal, _ := Iterator.GetNextAnimal()
		if Animal == nil {
			fmt.Println("No more Animals")
			break
		}
		Name, _ := Animal.Name()
		fmt.Println("Animal name: %s", Name)
		Type := fmt.Sprintf("%T", Animal)
		if Type == "*rtti.Tiger" {
			fmt.Println("  it's an animal")
		}
	}
	fmt.Println("Done!")
}

