<?xml version="1.0" encoding="UTF-8"?>
<component xmlns="http://schemas.autodesk.com/netfabb/automaticcomponenttoolkit/2018" libraryname="RTTI" namespace="RTTI" copyright="ADSK" year="2021" basename="rtti" version="1.0.0">

	<!-- class="Namespace:*" becomes aware of this.-->

	<license>
		<line value="All rights reserved."/>
	</license>

	<bindings>
		<binding language="CppDynamic" indentation="tabs"/>
		<binding language="Python" indentation="tabs"/>
		<binding language="Pascal" indentation="tabs"/>
	</bindings>
	<implementations>
		<implementation language="Cpp" indentation="tabs"/>
		<implementation language="Pascal" indentation="tabs" stubidentifier="impl"/>
	</implementations>

	<errors>
		<error name="NOTIMPLEMENTED" code="1" description="functionality not implemented"/>
		<error name="INVALIDPARAM" code="2" description="an invalid parameter was passed"/>
		<error name="INVALIDCAST" code="3" description="a type cast failed"/>
		<error name="BUFFERTOOSMALL" code="4" description="a provided buffer is too small"/>
		<error name="GENERICEXCEPTION" code="5" description="a generic exception occurred"/>
		<error name="COULDNOTLOADLIBRARY" code="6" description="the library could not be loaded"/>
		<error name="COULDNOTFINDLIBRARYEXPORT" code="7"
			   description="a required exported symbol could not be found in the library"/>
		<error name="INCOMPATIBLEBINARYVERSION" code="8"
			   description="the version of the binary interface does not match the bindings interface"/>
	</errors>


	<class name="Base">
		<method name="ClassTypeId" description="Get Class Type Id">
			<param name="ClassTypeId" type="uint64" pass="return" description="Class type as a 64 bits integer" />
		</method>
	</class>

	<class name="Animal" parent="Base" description="">
		<method name="Name" description="Get the name of the animal">
			<param name="Result" type="string" pass="return" />
		</method>
	</class>

	<class name="Mammal" parent="Animal" description="">
	</class>
	
	<class name="Reptile" parent="Animal" description="">
	</class>

	<class name="Giraffe" parent="Mammal" description="">
	</class>
	
	<class name="Tiger" parent="Mammal" description="">
		<method name="Roar" description="Roar like a tiger" />
	</class>
	
	<class name="Snake" parent="Reptile" description="">
	</class>

	<class name="Turtle" parent="Reptile" description="">
	</class>

	<class name="AnimalIterator" description="">
		<method name="GetNextAnimal" description="Return next animal">
			<param name="Animal" pass="return" type="optionalclass" class="Animal"/>
		</method>
	</class>

	<class name="Zoo" description="">
		<method name="Iterator" description="Return an iterator over all zoo animals">
			<param name="Iterator" pass="return" type="class" class="AnimalIterator"/>
		</method>
	</class>
	
	<global baseclassname="Base" stringoutclassname="Base" 
			releasemethod="ReleaseInstance" acquiremethod="AcquireInstance"
			versionmethod="GetVersion" errormethod="GetLastError" 
			injectionmethod="InjectComponent" symbollookupmethod="GetSymbolLookupMethod" 
			classtypeidmethod="ClassTypeId"
			>
		<method name="GetVersion" description="retrieves the binary version of this library.">
			<param name="Major" type="uint32" pass="out" description="returns the major version of this library"/>
			<param name="Minor" type="uint32" pass="out" description="returns the minor version of this library"/>
			<param name="Micro" type="uint32" pass="out" description="returns the micro version of this library"/>
		</method>
		<method name="GetLastError" description="Returns the last error recorded on this object">
			<param name="Instance" type="class" class="Base" pass="in" description="Instance Handle"/>
			<param name="ErrorMessage" type="string" pass="out" description="Message of the last error"/>
			<param name="HasError" type="bool" pass="return" description="Is there a last error to query"/>
		</method>
		<method name="ReleaseInstance" description="Releases shared ownership of an Instance">
			<param name="Instance" type="class" class="Base" pass="in" description="Instance Handle"/>
		</method>
		<method name="AcquireInstance" description="Acquires shared ownership of an Instance">
			<param name="Instance" type="class" class="Base" pass="in" description="Instance Handle"/>
		</method>
		<method name="InjectComponent" description="Injects an imported component for usage within this component">
			<param name="NameSpace" type="string" pass="in" description="NameSpace of the injected component" />
			<param name="SymbolAddressMethod" type="pointer" pass="in" description="Address of the SymbolAddressMethod of the injected component" />
		</method>
		<method name="GetSymbolLookupMethod" description="Returns the address of the SymbolLookupMethod">
			<param name="SymbolLookupMethod" type="pointer" pass="return" description="Address of the SymbolAddressMethod" />
		</method>
		<method name="CreateZoo" description="Create a new zoo with animals">
			<param name="Instance" pass="return" type="class" class="Zoo"/>
		</method>
	</global>

</component>
