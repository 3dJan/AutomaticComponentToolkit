/*++

Copyright (C) 2019 Calculation developers

All rights reserved.

This file has been generated by the Automatic Component Toolkit (ACT) version 1.7.0-develop.

Abstract: This is an autogenerated CSharp application that demonstrates the
 usage of the CSharp bindings of Calculation library

Interface version: 1.0.0

*/


using System;
namespace Calculation_Example
{
	class Calculation_Example
	{
		static void Main()
		{
			try
			{
				UInt32 nMajor, nMinor, nMicro;
				Calculation.Wrapper.GetVersion(out nMajor, out nMinor, out nMicro);
				string versionString = string.Format("Calculation.version = {0}.{1}.{2}", nMajor, nMinor, nMicro);
				Console.WriteLine(versionString);

				Numbers.Wrapper.GetVersion(out nMajor, out nMinor, out nMicro);
				versionString = string.Format("Numbers.version = {0}.{1}.{2}", nMajor, nMinor, nMicro);
				Console.WriteLine(versionString);

				try
				{
					Calculation.Wrapper.InjectComponent("Numbers", Numbers.Wrapper.GetSymbolLookupMethod());
				}
				catch (Exception e)
				{
					if (!e.Message.Equals("Component injection is not supported in CSharp."))
						throw new Exception("CSharp must throw correct exception here!");
				}
			}
			catch (Exception e)
			{
				Console.WriteLine("Exception: \"" + e.Message + "\"");
			}
		}
	}
}

