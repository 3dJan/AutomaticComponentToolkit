/*++

Copyright (C) 2019 Calculation developers

All rights reserved.

This file has been generated by the Automatic Component Toolkit (ACT) version 1.7.0-develop.

Abstract: This is an autogenerated Java application that demonstrates the
 usage of the Java bindings of Calculation library

Interface version: 1.0.0

*/


import calculation.*;
import numbers.*;

public class Calculation_Example {

	public static String libpath = ""; // TODO add the location of the shared library binary here

	public static void main(String[] args) throws CalculationException {
		try {
			String libpathCalculation = args[0];
			CalculationWrapper wrapperCalculation = new CalculationWrapper(libpathCalculation);

			CalculationWrapper.GetVersionResult versionCalculation = wrapperCalculation.getVersion();
			System.out.print("Calculation version: " + versionCalculation.Major + "." + versionCalculation.Minor + "." + versionCalculation.Micro);
			System.out.println();

			String libpathNumbers = args[1];
			NumbersWrapper wrapperNumbers = new NumbersWrapper(libpathNumbers);

			NumbersWrapper.GetVersionResult versionNumbers = wrapperNumbers.getVersion();
			System.out.print("Numbers version: " + versionNumbers.Major + "." + versionNumbers.Minor + "." + versionNumbers.Micro);
			System.out.println();

			wrapperCalculation.injectComponent("Numbers", wrapperNumbers.getSymbolLookupMethod());
			Calculator calculator = wrapperCalculation.createCalculator();
			Variable v1 = wrapperNumbers.createVariable(10.0);
			calculator.enlistVariable(v1);

			calculator.enlistVariable(wrapperNumbers.createVariable(5.0));

			Variable pSum = calculator.add();
			System.out.printf("   sum = %f", pSum.getValue());
			System.out.println();
			
			{
				Variable v2New = calculator.getEnlistedVariable(1);
				v2New.setValue(15.0);
			}
			System.out.printf("   sum = %f", calculator.add().getValue());
			System.out.println();
		}
		catch(Exception e) {
			System.out.print("Exception!");
		}
	}
}

