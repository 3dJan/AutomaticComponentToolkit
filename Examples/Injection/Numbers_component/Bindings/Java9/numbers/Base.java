/*++

Copyright (C) 2019 Numbers developers

All rights reserved.

This file has been generated by the Automatic Component Toolkit (ACT) version 1.7.0-develop.

Abstract: This is an autogenerated Java file in order to allow an easy
 use of Numbers library

Interface version: 1.0.0

*/

package numbers;

import com.sun.jna.Library;
import com.sun.jna.Memory;
import com.sun.jna.Native;
import com.sun.jna.Pointer;
import java.lang.ref.Cleaner;


import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.List;

public class Base {

	protected static final Cleaner mCleaner = Cleaner.create();

	protected NumbersHandle mHandle;

	protected NumbersWrapper mWrapper;

	public Base(NumbersWrapper wrapper, NumbersHandle handle) {
		mHandle = handle;
		mWrapper = wrapper;
		mCleaner.register(this, new InstanceReleaser(this));
	}

	public NumbersHandle getHandle() {
		return mHandle;
	}
	
	protected static class InstanceReleaser implements Runnable{
	
		protected NumbersHandle mHandle;
		
		protected NumbersWrapper mWrapper;
		
		protected InstanceReleaser(Base instance) {
			mHandle = instance.mHandle;
			mWrapper = instance.mWrapper;
		}
		
		@Override
		public void run() {
			try {
				mWrapper.checkError(null, mWrapper.numbers_releaseinstance.invokeInt(new java.lang.Object[]{mHandle.Value()}));
			} catch (NumbersException e) {
				e.printStackTrace();
			}
		}
	}
	/**
	 * Get Class Type Id
	 *
	 * @return Class type as a 64 bits integer
	 * @throws NumbersException
	 */
	public long classTypeId() throws NumbersException {
		Pointer bufferClassTypeId = new Memory(8);
		mWrapper.checkError(this, mWrapper.numbers_base_classtypeid.invokeInt(new java.lang.Object[]{mHandle.Value(), bufferClassTypeId}));
		return bufferClassTypeId.getLong(0);
	}


}

